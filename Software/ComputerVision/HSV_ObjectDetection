import numpy as np
import cv2

shot = cv2.VideoCapture(-1)

kernel = np.ones((15,15), np.uint8)

while True:

    result, video = shot.read()
    
    hsv_video = cv2.cvtColor(video,cv2.COLOR_BGR2HSV)

    limit_low = np.array([15, 4, 6])
    limit_high = np.array([40, 19,22])
    
    mask = cv2.inRange(video, limit_low, limit_high)
    mask = cv2.erode(mask,kernel)

    contours, _ = cv2.findContours(mask, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)

    for cnt in contours:
        area = cv2.contourArea(cnt)
        approx = cv2.approxPolyDP(cnt, 0.01*cv2.arcLength(cnt, True), True)
        
        if area > 10000:
            #cv2.drawContours(video, [approx], 0, (0, 0, 255), 5)
            x,y,w,h = cv2.boundingRect(approx)
            #print(x,y,w,h)
            cv2.rectangle(video, (x,y), (x+w,y+h), color=(255,0,255), thickness=8)
            cv2.circle(video, (int(x+(w/2)), int(y+(h/2))),5, color=(255,255,255), thickness=3)
    

    cv2.imshow('HSV', mask)
    cv2.imshow('Video', video)

    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

shot.release()
cv2.destroyAllWindowss()